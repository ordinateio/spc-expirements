name: "Build on Windows x86_64"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "PHP version to build"
        required: true
        type: choice
        default: "8.4"
        options:
          - "8.4"
          - "8.3"
          - "8.2"
          - "8.1"

      extensions:
        description: "Extensions to build (comma separated)"
        required: true
        type: string
        default: "bcmath,bz2,calendar,ctype,curl,dom,ev,exif,ffi,fileinfo,filter,iconv,libxml,mbregex,mbstring,opcache,openssl,pdo,pdo_sqlite,phar,session,shmop,simplexml,soap,sockets,sodium,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib,gd"

      libs:
        description: "Libraries to build (comma separated)"
        required: true
        type: string
        default: "freetype,libjpeg,libavif,libwebp"

      build-cli:
        description: "Build a CLI SAPI"
        type: boolean
        default: true

      build-micro:
        description: "Build a Micro SAPI"
        type: boolean
        default: false

      debug:
        description: "Show full build logs"
        type: boolean
        default: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: "Build ${{ inputs.version }} on Windows x86_64"
    runs-on: windows-2025

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Cache the SPC binary"
        id: cache-spc-binary
        uses: actions/cache@v4
        with:
          path: spc.exe
          key: spc-binary

      - name: "Download the SPC binary"
        if: steps.cache-spc-binary.outputs.cache-hit != 'true'
        run: curl.exe -fsSL -o spc.exe https://dl.static-php.dev/static-php-cli/spc-bin/nightly/spc-windows-x64.exe

      - name: "Generate a key for the source cache"
        shell: bash
        run: |
          INPUT_HASH=$(echo "${{ runner.os }}-${{ inputs.version }}-${{ inputs.extensions }}-${{ inputs.libs }}" | sha256sum | awk '{print $1}')
          echo "INPUT_HASH=${INPUT_HASH}" >> "$GITHUB_ENV"

      - name: "Cache the downloaded source code"
        id: cache-download
        uses: actions/cache@v4
        with:
          path: downloads
          key: php-${{ env.INPUT_HASH }}

      - name: "Build a CLI SAPI"
        if: ${{ inputs.build-cli == true }}
        run: echo "SPC_BUILD_CLI=--build-cli" >> $env:GITHUB_ENV

      - name: "Build a Micro SAPI"
        if: ${{ inputs.build-micro == true }}
        run: echo "SPC_BUILD_MICRO=--build-micro" >> $env:GITHUB_ENV

      - name: "Show full build logs"
        if: inputs.debug == true
        run: echo "SPC_BUILD_DEBUG=--debug" >> $env:GITHUB_ENV

      - name: "Run the \"doctor\" command"
        run: .\spc.exe doctor --auto-fix

      - name: "Run the \"download\" command"
        if: steps.cache-download.outputs.cache-hit != 'true'
        run: .\spc.exe download --with-php="${{ inputs.version }}" --for-extensions="${{ inputs.extensions }}" --for-libs="${{ inputs.libs }}" --prefer-pre-built ${{ env.SPC_BUILD_DEBUG }}

      - name: "Run the \"build\" command"
        run: .\spc.exe build "${{ inputs.extensions }}" --with-libs="${{ inputs.libs }}" ${{ env.SPC_BUILD_CLI }} ${{ env.SPC_BUILD_MICRO }} ${{ env.SPC_BUILD_DEBUG }}

      - name: "Upload a CLI SAPI"
        if: ${{ inputs.build-cli == true }}
        uses: actions/upload-artifact@v4
        with:
          name: cli-${{ inputs.version }}-windows-x86_64
          path: buildroot/bin/php.exe

      - name: "Upload a Micro SAPI"
        if: ${{ inputs.build-micro == true }}
        uses: actions/upload-artifact@v4
        with:
          name: micro-${{ inputs.version }}-windows-x86_64
          path: buildroot/bin/micro.sfx

      - name: "Upload the license files"
        uses: actions/upload-artifact@v4
        with:
          name: license-files
          path: buildroot/license/

      - name: "Upload the metadata files"
        uses: actions/upload-artifact@v4
        with:
          name: build-meta
          path: |
            buildroot/build-extensions.json
            buildroot/build-libraries.json
